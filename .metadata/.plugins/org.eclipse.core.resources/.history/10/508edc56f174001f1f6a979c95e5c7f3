package com.eazybytes.loans.service.impl;

import java.util.Optional;

import org.springframework.stereotype.Service;

import com.eazybytes.loans.constants.LoansConstants;
import com.eazybytes.loans.entity.Loans;
import com.eazybytes.loans.exception.LoanAlreadyExistException;
import com.eazybytes.loans.repository.LoansRepository;
import com.eazybytes.loans.service.ILoansService;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class LoansServiceImpl implements ILoansService {

	private LoansRepository loansRepository;
	@Override
	public void createLoans(String mobileNumber) {
		Optional<Loans>optionalLoans= loansRepository.findByMobileNumber(mobileNumber);
		if(optionalLoans.isPresent())
		{
			throw new LoanAlreadyExistException("Verilen telefon numarası için zaten bir loan oluşturulmuştur " + mobileNumber);
		}
		loansRepository.save(createnewLoans(mobileNumber));
		
		
	}
	private Loans createnewLoans(String mobileNumber) {
		  Loans newLoan = new Loans();
	        long randomLoanNumber = 100000000000L + new Random().nextInt(900000000);
	        newLoan.setLoanNumber(Long.toString(randomLoanNumber));
	        newLoan.setMobileNumber(mobileNumber);
	        newLoan.setLoanType(LoansConstants.HOME_LOAN);
	        newLoan.setTotalLoan(LoansConstants.NEW_LOAN_LIMIT);
	        newLoan.setAmountPaid(0);
	        newLoan.setOutstandingAmount(LoansConstants.NEW_LOAN_LIMIT);
	        return newLoan;
	}

	
}
